---
// src/components/svg/Copy.astro
interface Props {
    textToCopy: string;
    className?: string;
}

const { textToCopy, className } = Astro.props;

---

<button
    type="button"
    class:list={["copy-button", className]}
    data-text-to-copy={textToCopy}
    title="Copiar al portapapeles"
>
    <svg
        xmlns="http://www.w3.org/2000/svg"
        width="1em"
        height="1em"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        stroke-linejoin="round"
        class="lucide lucide-copy-icon lucide-copy"
        ><rect width="14" height="14" x="8" y="8" rx="2" ry="2"></rect><path
            d="M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2"
        ></path></svg
    >
</button>
<script>
  // Script que se ejecutará en el cliente
document.addEventListener('DOMContentLoaded', () => {
  // Asegúrate de que copyButtons sea NodeListOf<HTMLButtonElement>
  const copyButtons = document.querySelectorAll('.copy-button') as NodeListOf<HTMLButtonElement>;

  copyButtons.forEach(button => {
    button.addEventListener('click', async () => {
      // TypeScript ahora sabe que `button` es un HTMLButtonElement,
      // por lo que tiene la propiedad `dataset`.
      const textToCopy = button.dataset.textToCopy;

      try {
        await navigator.clipboard.writeText(textToCopy || ''); // Añadir '' en caso de que textToCopy sea undefined
        // TypeScript ahora sabe que `button` es un HTMLButtonElement,
        // por lo que tiene la propiedad `title`.
        const originalTitle = button.title;
        button.title = '¡Copiado!';
        setTimeout(() => {
          button.title = originalTitle;
        }, 2000);
      } catch (err) {
        console.error('Error al copiar el texto: ', err);
        alert('No se pudo copiar el texto. Por favor, inténtelo manualmente.');
      }
    });
  });
});
</script>

<style>
  .copy-button {
    background: none;
    border: none;
    cursor: pointer;
    padding: 0;
    display: inline-flex; /* Asegura que el SVG se alinee correctamente */
    align-items: center;
    justify-content: center;
    color: inherit; /* Hereda el color del texto si lo deseas */
    transition: color 0.3s ease;
  }

  .copy-button:hover {
    color: #0b5181; /* Color al pasar el ratón */
  }

  .copy-button svg {
    width: 1.2rem; /* Ajusta el tamaño del icono SVG */
    height: 1.2rem;
  }
</style>
